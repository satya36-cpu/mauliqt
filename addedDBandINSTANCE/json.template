{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Create a vpc with 6 subnets",
    "Parameters": {
        "vpccidr": {
            "Description": "This is cidr range of vpc",
            "Type": "String",
            "Default": "192.168.0.0/16"
        },
        "subnetcidrs": {
            "Description": "This is cidr ranges of subnets",
            "Type": "CommaDelimitedList",
            "Default": "192.168.0.0/24,192.168.1.0/24,192.168.2.0/24,192.168.3.0/24,192.168.4.0/24,192.168.5.0/24"
        },
        "zone1": {
            "Description": "This is zone 1 for 3 subnets",
            "Type": "AWS::EC2::AvailabilityZone::Name"
        },
        "zone2": {
            "Description": "This is zone 2 for 3 subnets",
            "Type": "AWS::EC2::AvailabilityZone::Name"
        }
    },
    "Resources": {
        "ntiervpc": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "CidrBlock": {
                    "Ref": "vpccidr"
                },
                "EnableDnsHostnames": true,
                "EnableDnsSupport": true,
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "ntier"
                    }
                ]
            }
        },
        "web1subnet": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "CidrBlock": {
                    "Fn::Select": [
                        0,
                        {
                            "Ref": "subnetcidrs"
                        }
                    ]
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "web1"
                    }
                ],
                "VpcId": {
                    "Ref": "ntiervpc"
                },
                "AvailabilityZone": {
                    "Ref": "zone1"
                }
            }
        },
        "web2subnet": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "CidrBlock": {
                    "Fn::Select": [
                        1,
                        {
                            "Ref": "subnetcidrs"
                        }
                    ]
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "web2"
                    }
                ],
                "VpcId": {
                    "Ref": "ntiervpc"
                },
                "AvailabilityZone": {
                    "Ref": "zone2"
                }
            }
        },
        "app1subnet": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "CidrBlock": {
                    "Fn::Select": [
                        2,
                        {
                            "Ref": "subnetcidrs"
                        }
                    ]
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "app1"
                    }
                ],
                "VpcId": {
                    "Ref": "ntiervpc"
                },
                "AvailabilityZone": {
                    "Ref": "zone1"
                }
            }
        },
        "app2subnet": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "CidrBlock": {
                    "Fn::Select": [
                        3,
                        {
                            "Ref": "subnetcidrs"
                        }
                    ]
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "app2"
                    }
                ],
                "VpcId": {
                    "Ref": "ntiervpc"
                },
                "AvailabilityZone": {
                    "Ref": "zone2"
                }
            }
        },
        "db1subnet": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "CidrBlock": {
                    "Fn::Select": [
                        4,
                        {
                            "Ref": "subnetcidrs"
                        }
                    ]
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "db1"
                    }
                ],
                "VpcId": {
                    "Ref": "ntiervpc"
                },
                "AvailabilityZone": {
                    "Ref": "zone1"
                }
            }
        },
        "db2subnet": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "CidrBlock": {
                    "Fn::Select": [
                        5,
                        {
                            "Ref": "subnetcidrs"
                        }
                    ]
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "db2"
                    }
                ],
                "VpcId": {
                    "Ref": "ntiervpc"
                },
                "AvailabilityZone": {
                    "Ref": "zone2"
                }
            }
        },
        "websecuritygroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "This is the wbsg",
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "22",
                        "ToPort": "22",
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "80",
                        "ToPort": "80",
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "443",
                        "ToPort": "443",
                        "CidrIp": "0.0.0.0/0"
                    }
                ],
                "VpcId": {
                    "Ref": "ntiervpc"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "wbsg"
                    }
                ]
            }
        },
        "appsecuritygroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "This is for the mysql",
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "22",
                        "ToPort": "22",
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "8080",
                        "ToPort": "8080",
                        "CidrIp": {
                            "Ref": "vpccidr"
                        }
                    }
                ],
                "VpcId": {
                    "Ref": "ntiervpc"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "appsg"
                    }
                ]
            }
        },
        "Dbsecuritygroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "This is the dbsg",
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "3306",
                        "ToPort": "3306",
                        "CidrIp": {
                            "Ref": "vpccidr"
                        }
                    }
                ],
                "VpcId": {
                    "Ref": "ntiervpc"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "dbsg"
                    }
                ]
            }
        },
        "ntierigw": {
            "Type": "AWS::EC2::InternetGateway",
            "Properties": {
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "ntierigw"
                    }
                ]
            },
            "AttachGateway": {
                "Type": "AWS::EC2::VPCGatewayAttachment",
                "Properties": {
                    "VpcId": {
                        "Ref": "ntiervpc",
                        "InternetGatewayId": {
                            "Ref": "ntierigw"
                        }
                    }
                },
                "publicrt": {
                    "Type": "AWS::EC2::RouteTable",
                    "Properties": {
                        "VpcId": {
                            "Ref": "ntiervpc",
                            "Tags": [
                                {
                                    "Key": "Name",
                                    "Value": "publicrt"
                                }
                            ]
                        }
                    }
                }
            },
            "publicigw": {
                "Type": "AWS::EC2::Route",
                "Properties": {
                    "RouteTableId": {
                        "Ref": "publicrt"
                    },
                    "DestinationCidrBlock": "0.0.0.0/0",
                    "GatewayId": {
                        "Ref": "ntierigw"
                    }
                }
            },
            "privatert": {
                "Type": "AWS::EC2::RouteTable",
                "Properties": {
                    "VpcId": {
                        "Ref": "ntiervpc",
                        "Tags": [
                            {
                                "Key": "Name",
                                "Value": "privatert"
                            }
                        ]
                    }
                }
            },
            "publicweb1ass": {
                "Type": "AWS::EC2::SubnetRouteTableAssociation",
                "Properties": {
                    "SubnetId": {
                        "Ref": "web1subnet"
                    },
                    "RouteTableId": {
                        "Ref": "publicrt"
                    }
                }
            },
            "publicweb2ass": {
                "Type": "AWS::EC2::SubnetRouteTableAssociation",
                "Properties": {
                    "SubnetId": {
                        "Ref": "web2subnet"
                    },
                    "RouteTableId": {
                        "Ref": "publicrt"
                    }
                }
            },
            "privateapp1ass": {
                "Type": "AWS::EC2::SubnetRouteTableAssociation",
                "Properties": {
                    "SubnetId": {
                        "Ref": "app1subnet"
                    },
                    "RouteTableId": {
                        "Ref": "privatert"
                    }
                }
            },
            "privateapp2ass": {
                "Type": "AWS::EC2::SubnetRouteTableAssociation",
                "Properties": {
                    "SubnetId": {
                        "Ref": "app2subnet"
                    },
                    "RouteTableId": {
                        "Ref": "privatert"
                    }
                }
            },
            "privatdb1ass": {
                "Type": "AWS::EC2::SubnetRouteTableAssociation",
                "Properties": {
                    "SubnetId": {
                        "Ref": "db1subnet"
                    },
                    "RouteTableId": {
                        "Ref": "privatert"
                    }
                }
            },
            "privatdb2ass": {
                "Type": "AWS::EC2::SubnetRouteTableAssociation",
                "Properties": {
                    "SubnetId": {
                        "Ref": "db2subnet"
                    },
                    "RouteTableId": {
                        "Ref": "privatert"
                    }
                }
            }
        }
    }
}    